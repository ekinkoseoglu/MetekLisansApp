@model IEnumerable<MetekLisansApp.Models.ViewModels.LisansGecmisViewModel>
@{
    ViewData["Title"] = "Lisans Geçmişi";
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem 0;
        }

        .history-card {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            padding: 2rem;
        }

        .search-container {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .search-input {
            border: 2px solid #dee2e6;
            border-radius: 10px;
            padding: 12px 45px 12px 20px;
            width: 100%;
            transition: all 0.3s ease;
        }

            .search-input:focus {
                border-color: #7c4dff;
                box-shadow: 0 0 0 3px rgba(124, 77, 255, 0.25);
            }

        .search-icon {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }

        .custom-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 8px;
        }

            .custom-table thead th {
                background: #7c4dff;
                color: white;
                padding: 1rem;
                border: none;
                position: sticky;
                top: 0;
            }

            .custom-table tbody tr {
                background: white;
                transition: all 0.3s ease;
                border-radius: 10px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            }

                .custom-table tbody tr:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                }

            .custom-table td {
                padding: 1rem;
                vertical-align: middle;
                border-top: none;
                border-bottom: none;
            }

        .no-results {
            text-align: center;
            padding: 2rem;
            color: #6c757d;
            display: none;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
        }

        .btn-renew {
            background: #ffc107;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-renew:hover {
                background: #e0a800;
                transform: scale(1.05);
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="history-card">
            <div class="text-center mb-5">
                <h2 class="fw-bold mb-3">Lisans Geçmişi</h2>
                <p class="text-muted">Oluşturulan tüm lisans kayıtları</p>
            </div>

            <div class="search-container">
                <input type="text"
                       class="search-input"
                       id="searchInput"
                       placeholder="Firma adına göre ara...">
                <i class="fas fa-search search-icon"></i>
            </div>

            <div class="table-responsive">
                <table class="custom-table">
                    <thead>
                        <tr>
                            <th>Firma Adı</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Bitiş Tarihi</th>
                            <th>Lisans Kodu</th>
                            <th>Oluşturan</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.FirmaAd</td>
                                <td>@item.Lisans.LisansVerilmeTarih.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>@item.Lisans.LisansBitisTarih.ToString("dd.MM.yyyy HH:mm")</td>
                                <td><code>@item.Lisans.LisansKodu</code></td>
                                <td>@item.Lisans.OlusturanUserId</td>
                                <td>
                                    <a class="btn btn-renew"
                                       href="@Url.Action("Edit", "Lisans", new { id = item.Lisans.Id })">
                                        <i class="fas fa-sync-alt me-2"></i>Yenile
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="no-results" id="noResults">
                    <i class="fas fa-search fa-2x mb-3"></i>
                    <h5>Eşleşen kayıt bulunamadı</h5>
                </div>

                <ul class="pagination" id="pagination"></ul>

            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const tableBody = document.getElementById('tableBody');
            const rows = Array.from(tableBody.getElementsByTagName('tr'));
            const noResults = document.getElementById('noResults');
            const pagination = document.getElementById('pagination');

            let currentPage = 1;
            const itemsPerPage = 10;
            let filteredData = [];

            function initialize() {
                filteredData = rows;
                updateTable();
            }

            function filterTable() {
                const filter = searchInput.value.toLowerCase();
                filteredData = rows.filter(row => {
                    const firmName = row.cells[0].textContent.toLowerCase();
                    return firmName.includes(filter);
                });

                currentPage = 1;
                updateTable();
            }

            function updateTable() {
                rows.forEach(row => row.style.display = 'none');

                const start = (currentPage - 1) * itemsPerPage;
                const end = start + itemsPerPage;
                const paginatedItems = filteredData.slice(start, end);

                paginatedItems.forEach(row => row.style.display = '');

                noResults.style.display = filteredData.length > 0 ? 'none' : 'block';

                updatePagination();
            }

            function updatePagination() {
                const totalPages = Math.ceil(filteredData.length / itemsPerPage);
                pagination.innerHTML = '';

                pagination.appendChild(createPageItem('←', currentPage > 1 ? currentPage - 1 : null));

                for(let i = 1; i <= totalPages; i++) {
                    pagination.appendChild(createPageItem(i, i));
                }

                pagination.appendChild(createPageItem('→', currentPage < totalPages ? currentPage + 1 : null));
            }

            function createPageItem(text, page) {
                const li = document.createElement('li');
                li.className = 'page-item';

                const a = document.createElement('a');
                a.className = 'page-link' + (page === currentPage ? ' active' : '');
                a.href = '#';
                a.innerHTML = text;

                if(page) {
                    a.addEventListener('click', (e) => {
                        e.preventDefault();
                        currentPage = page;
                        updateTable();
                    });
                } else {
                    a.classList.add('disabled');
                }

                li.appendChild(a);
                return li;
            }

            searchInput.addEventListener('input', filterTable);
            initialize();
        });
    </script>
</body>
</html>